# version: "3.1"
# services:
#   mongo:
#     image: mongo:7
#     restart: always
#     container_name: mongo
#     ports:
#       - 27017:27017
#     environment:
#       - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
#       - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
#     networks:
#       - mongo

#   mongo-express:
#     image: mongo-express
#     restart: always
#     container_name: mongo_ui
#     ports:
#       - 8081:8081
#     environment:
#       - ME_CONFIG_MONGODB_ADMINUSERNAME=${ME_CONFIG_MONGODB_ADMINUSERNAME}
#       - ME_CONFIG_MONGODB_ADMINPASSWORD=${ME_CONFIG_MONGODB_ADMINPASSWORD}
#       - ME_CONFIG_MONGODB_URL=${ME_CONFIG_MONGODB_URL}
#     networks:
#       - mongo

# networks:
#   mongo:
#     driver: bridge

version: "3.8"

services:
  mongo:
    image: mongo
    container_name: mongo
    # environment:
    #  - MONGO_INITDB_ROOT_USERNAME=root
    #  - MONGO_INITDB_ROOT_PASSWORD=pass12345
    ports:
      - 27017:27017
    networks:
      - mongo
    #echo 'db.runCommand("ping").ok' | mongo 10.10.10.60:27017/test --quiet

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      #- ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      #- ME_CONFIG_MONGODB_ADMINUSERNAME=root
      #- ME_CONFIG_MONGODB_ADMINPASSWORD=pass12345
      - ME_CONFIG_BASICAUTH_USERNAME=root
      - ME_CONFIG_BASICAUTH_PASSWORD=root
    ports:
      - 8080:8081
    networks:
      - mongo
    # wget --quiet --tries=3 --spider http://admin:admin123@10.10.10.60:8081 || exit 1

networks:
  mongo: # docker-compose-files_mongo
    driver: bridge
# networks: -- To use above network services in other projects add this networks property
# docker-compose-files_mongo: -- {{directory_name}}_{{network_name}}
# external: true -- are you using external network?
